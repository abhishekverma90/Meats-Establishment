import '../add_item_screen/widgets/listtext_item_widget.dart';import 'controller/add_item_controller.dart';import 'models/listtext_item_model.dart';import 'package:flutter/material.dart';import 'package:meats_establishment/core/app_export.dart';import 'package:meats_establishment/core/utils/validation_functions.dart';import 'package:meats_establishment/widgets/app_bar/appbar_image.dart';import 'package:meats_establishment/widgets/app_bar/appbar_subtitle.dart';import 'package:meats_establishment/widgets/app_bar/custom_app_bar.dart';import 'package:meats_establishment/widgets/custom_button.dart';import 'package:meats_establishment/widgets/custom_drop_down.dart';import 'package:meats_establishment/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class AddItemScreen extends GetWidget<AddItemController> {GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.whiteA700, appBar: CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 42, leading: AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 18, top: 8, bottom: 8), onTap: onTapArrowleft13), title: AppbarSubtitle(text: "lbl_add_item".tr, margin: getMargin(left: 14))), body: Form(key: _formKey, child: Container(width: size.width, padding: getPadding(top: 6, bottom: 6), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(1.00), width: getHorizontalSize(374.00), decoration: BoxDecoration(color: ColorConstant.gray300)), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 19), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgVideocameraBlueGray300, height: getSize(24.00), width: getSize(24.00)), CustomImageView(svgPath: ImageConstant.imgCameraBlueGray300, height: getSize(24.00), width: getSize(24.00), margin: getMargin(left: 12), onTap: () {onTapImgCamera();})]))), CustomDropDown(width: 335, focusNode: FocusNode(), icon: Container(margin: getMargin(left: 30, right: 12), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlack900)), hintText: "lbl_item_category".tr, margin: getMargin(top: 20), items: controller.addItemModelObj.value.dropdownItemList, onChanged: (value) {controller.onSelected(value);}), CustomTextFormField(width: 335, focusNode: FocusNode(), controller: controller.controlsTextOneController, hintText: "lbl_item_name".tr, margin: getMargin(top: 20), validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;}), CustomTextFormField(width: 335, focusNode: FocusNode(), controller: controller.controlsTextTwoController, hintText: "lbl_about_item".tr, margin: getMargin(top: 20), padding: TextFormFieldPadding.PaddingAll17, textInputAction: TextInputAction.done, maxLines: 10), Padding(padding: getPadding(left: 20, top: 20, right: 19), child: Obx(() => ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(20.00));}, itemCount: controller.addItemModelObj.value.listtextItemList.length, itemBuilder: (context, index) {ListtextItemModel model = controller.addItemModelObj.value.listtextItemList[index]; return ListtextItemWidget(model);}))), CustomButton(height: 48, width: 335, text: "lbl_add_item".tr, margin: getMargin(top: 40, bottom: 5))]))), bottomNavigationBar: Container(padding: getPadding(left: 163, top: 6, right: 163, bottom: 6), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgRectangle, height: getVerticalSize(5.00), width: getHorizontalSize(48.00), radius: BorderRadius.circular(getHorizontalSize(2.00)), margin: getMargin(top: 2))])))); } 
onTapImgCamera() async  { await PermissionManager.askForPermission(Permission.camera);await PermissionManager.askForPermission(Permission.storage);List<String?>? imageList = [];await FileManager().showModelSheetForImage(getImages: (value) async {imageList = value;}); } 
onTapArrowleft13() { Get.back(); } 
 }
